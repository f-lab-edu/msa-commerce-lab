openapi: 3.0.3
info:
  title: MSA Commerce Lab - Monolith API
  version: 1.0.0
  description: |
    API specification for MSA Commerce Lab monolithic service.
    Implemented based on hexagonal architecture.
  contact:
    name: MSA Commerce Lab Team
    email: dev@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8080
    description: Local development server
  - url: https://api-dev.msa-commerce-lab.com
    description: Development environment
  - url: https://api.msa-commerce-lab.com
    description: Production environment

  # Security configuration (for future expansion)
security:
  - bearerAuth: []

tags:
  - name: Product
    description: Product management API
    externalDocs:
      description: Product API Guide
      url: https://docs.example.com/product-api

paths:
  /api/v1/products:
    post:
      tags: [Product]
      summary: Create Product
      description: |
        Creates a new product.
        
        ### Business Rules
        - SKU cannot be duplicated (automatically generated)
        - Price must be between 0.01 and 99,999,999.99 KRW
        - Initial stock quantity must be 0 or greater
        - Category ID must be one of the defined values (1-10)
        
        ### Architecture
        This API is implemented through inbound adapters of hexagonal architecture.
      operationId: createProduct
      requestBody:
        description: Product information to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreateRequest'
            examples:
              electronics:
                summary: Electronics Example
                description: MacBook Pro product creation example
                value:
                  sku: "MACB-16-M3MAX"
                  name: "MacBook Pro 16"
                  description: "Apple MacBook Pro 16-inch M3 Max"
                  shortDescription: "High-performance 16-inch MacBook Pro"
                  brand: "Apple"
                  model: "MacBook Pro M3 Max"
                  price: 3490000
                  comparePrice: 3790000
                  categoryId: 1
                  initialStock: 50
                  minOrderQuantity: 1
                  maxOrderQuantity: 5
                  reorderPoint: 5
                  reorderQuantity: 20
                  locationCode: "MAIN"
                  visibility: "PUBLIC"
                  isFeatured: true
                  metaTitle: "MacBook Pro 16-inch M3 Max"
                  metaDescription: "Apple latest MacBook Pro 16-inch model"
                  searchKeywords: "macbook,pro,apple,laptop"
              clothing:
                summary: Clothing Example
                description: T-shirt product creation example
                value:
                  sku: "BW-001-BASIC"
                  name: "Basic Cotton T-Shirt"
                  description: "100% cotton basic t-shirt"
                  shortDescription: "Comfortable basic t-shirt"
                  brand: "BasicWear"
                  model: "BW-001"
                  price: 29900
                  categoryId: 2
                  initialStock: 100
                  minOrderQuantity: 1
                  maxOrderQuantity: 50
                  reorderPoint: 10
                  reorderQuantity: 50
                  locationCode: "MAIN"
                  visibility: "PUBLIC"
                  isFeatured: false
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
              examples:
                success:
                  summary: Success response example
                  value:
                    id: 1
                    categoryId: 1
                    sku: "MACB-12AB34CD"
                    name: "MacBook Pro 16"
                    description: "Apple MacBook Pro 16-inch M3 Max"
                    shortDescription: "High-performance 16-inch MacBook Pro"
                    brand: "Apple"
                    model: "MacBook Pro M3 Max"
                    price: 3490000
                    comparePrice: 3790000
                    status: "DRAFT"
                    visibility: "PUBLIC"
                    isFeatured: true
                    availableQuantity: 50
                    reservedQuantity: 0
                    totalQuantity: 50
                    lowStockThreshold: 5
                    isTrackingEnabled: true
                    isBackorderAllowed: false
                    minOrderQuantity: 1
                    maxOrderQuantity: 5
                    reorderPoint: 5
                    reorderQuantity: 20
                    locationCode: "MAIN"
                    versionNumber: 0
                    metaTitle: "MacBook Pro 16-inch M3 Max"
                    metaDescription: "Apple latest MacBook Pro 16-inch model"
                    searchKeywords: "macbook,pro,apple,laptop"
                    createdAt: "2024-01-15T10:30:00"
                    updatedAt: "2024-01-15T10:30:00"
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                validation_error:
                  summary: Validation failed
                  value:
                    message: "Validation failed for 1 field(s)"
                    timestamp: "2024-01-15T10:30:00"
                    path: "/api/v1/products"
                    status: 400
                    validationErrors:
                      - field: "name"
                        rejectedValue: ""
                        message: "Product name is required."
                invalid_price:
                  summary: Price range error
                  value:
                    message: "Price must be greater than 0."
                    timestamp: "2024-01-15T10:30:00"
                    path: "/api/v1/products"
                    status: 400
        '409':
          description: Duplicate SKU
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                duplicate_sku:
                  summary: Duplicate SKU
                  value:
                    message: "Product SKU already exists: MACB-12AB34CD"
                    code: "PRODUCT_SKU_DUPLICATE"
                    timestamp: "2024-01-15T10:30:00"
                    path: "/api/v1/products"
                    status: 409
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                internal_error:
                  summary: Internal server error
                  value:
                    message: "An internal server error occurred."
                    timestamp: "2024-01-15T10:30:00"
                    path: "/api/v1/products"
                    status: 500

  /api/v1/products/{id}:
    get:
      tags: [Product]
      summary: Get Product by ID
      description: |
        Retrieves product information by ID with caching and view count tracking.
        
        ### Business Rules
        - Product ID must exist and be accessible
        - ARCHIVED products are filtered out (returns 404)
        - View count is incremented asynchronously for performance
        - Cached responses return within 100ms target
        
        ### Performance Features
        - **Redis Caching**: Cache-first approach with 1-hour TTL
        - **Async View Tracking**: Non-blocking view count increment
        - **Response Time**: <100ms for cached requests, <300ms for cache miss
        
        ### Architecture
        Implemented using Clean Architecture with hexagonal pattern:
        - Inbound Adapter: ProductController
        - Application Service: ProductGetService with cache coordination
        - Outbound Adapters: ProductRepository, ProductViewCountAdapter (Redis)
      operationId: getProduct
      parameters:
        - name: id
          in: path
          required: true
          description: Unique ID of the product to retrieve
          schema:
            type: integer
            format: int64
            minimum: 1
          example: 1
      responses:
        '200':
          description: Product retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
              examples:
                active_product:
                  summary: Active product example
                  description: Successfully retrieved active product with full information
                  value:
                    id: 1
                    categoryId: 1
                    sku: "MACB-12AB34CD"
                    name: "MacBook Pro 16"
                    description: "Apple MacBook Pro 16-inch M3 Max"
                    shortDescription: "High-performance 16-inch MacBook Pro"
                    brand: "Apple"
                    model: "MacBook Pro M3 Max"
                    price: 3490000
                    comparePrice: 3790000
                    costPrice: 2500000
                    weight: 2.14
                    productAttributes: '{"color": "Space Gray", "storage": "1TB"}'
                    status: "ACTIVE"
                    visibility: "PUBLIC"
                    isFeatured: true
                    availableQuantity: 45
                    reservedQuantity: 5
                    totalQuantity: 50
                    lowStockThreshold: 5
                    isTrackingEnabled: true
                    isBackorderAllowed: false
                    minOrderQuantity: 1
                    maxOrderQuantity: 5
                    reorderPoint: 5
                    reorderQuantity: 20
                    locationCode: "MAIN"
                    versionNumber: 2
                    metaTitle: "MacBook Pro 16-inch M3 Max"
                    metaDescription: "Apple latest MacBook Pro 16-inch model"
                    searchKeywords: "macbook,pro,apple,laptop"
                    createdAt: "2024-01-15T10:30:00"
                    updatedAt: "2024-01-15T16:45:00"
                draft_product:
                  summary: Draft product example
                  description: Product in DRAFT status (still accessible via GET)
                  value:
                    id: 2
                    categoryId: 2
                    sku: "BW-001-BASIC"
                    name: "Basic Cotton T-Shirt"
                    description: "100% cotton basic t-shirt"
                    shortDescription: "Comfortable basic t-shirt"
                    brand: "BasicWear"
                    model: "BW-001"
                    price: 29900
                    status: "DRAFT"
                    visibility: "PUBLIC"
                    isFeatured: false
                    availableQuantity: 100
                    reservedQuantity: 0
                    totalQuantity: 100
                    lowStockThreshold: 10
                    isTrackingEnabled: true
                    isBackorderAllowed: false
                    minOrderQuantity: 1
                    maxOrderQuantity: 50
                    reorderPoint: 10
                    reorderQuantity: 50
                    locationCode: "MAIN"
                    versionNumber: 0
                    createdAt: "2024-01-15T12:00:00"
                    updatedAt: "2024-01-15T12:00:00"
                without_inventory:
                  summary: Product without inventory
                  description: Product with no inventory information
                  value:
                    id: 3
                    categoryId: 3
                    sku: "BOOK-001-TECH"
                    name: "Clean Architecture Book"
                    description: "Software architecture and design principles"
                    shortDescription: "Essential architecture book"
                    brand: "TechBooks"
                    model: "CA-2024"
                    price: 45000
                    status: "ACTIVE"
                    visibility: "PUBLIC"
                    isFeatured: false
                    availableQuantity: null
                    reservedQuantity: null
                    totalQuantity: null
                    lowStockThreshold: null
                    isTrackingEnabled: false
                    isBackorderAllowed: true
                    minOrderQuantity: 1
                    maxOrderQuantity: 999
                    reorderPoint: null
                    reorderQuantity: null
                    locationCode: "DIGITAL"
                    versionNumber: 1
                    createdAt: "2024-01-15T09:15:00"
                    updatedAt: "2024-01-15T15:30:00"
        '404':
          description: Product not found or archived
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                product_not_found:
                  summary: Product not found
                  description: Product with specified ID does not exist
                  value:
                    message: "Product not found with id: 999"
                    code: "PRODUCT_NOT_FOUND"
                    timestamp: "2024-01-15T16:45:00"
                    path: "/api/v1/products/999"
                    status: 404
                archived_product:
                  summary: Archived product
                  description: Product exists but is archived (soft deleted)
                  value:
                    message: "Product not found with id: 5"
                    code: "PRODUCT_NOT_FOUND"
                    timestamp: "2024-01-15T16:45:00"
                    path: "/api/v1/products/5"
                    status: 404
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_id_format:
                  summary: Invalid ID format
                  description: Product ID must be a positive integer
                  value:
                    message: "Invalid product ID format"
                    code: "INVALID_PARAMETER"
                    timestamp: "2024-01-15T16:45:00"
                    path: "/api/v1/products/abc"
                    status: 400
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                server_error:
                  summary: Internal server error
                  description: Unexpected server error occurred
                  value:
                    message: "An internal server error occurred"
                    code: "INTERNAL_SERVER_ERROR"
                    timestamp: "2024-01-15T16:45:00"
                    path: "/api/v1/products/1"
                    status: 500
                cache_error:
                  summary: Cache service error
                  description: Redis cache temporarily unavailable (fallback to database)
                  value:
                    message: "Cache service temporarily unavailable"
                    code: "CACHE_SERVICE_ERROR"
                    timestamp: "2024-01-15T16:45:00"
                    path: "/api/v1/products/1"
                    status: 500

    put:
      tags: [Product]
      summary: Update Product
      description: |
        Updates existing product information.
        
        ### Business Rules
        - Product ID must exist
        - SKU cannot be modified (unique identifier)
        - Price must be between 0.01 and 99,999,999.99 KRW
        - Stock quantity must be 0 or greater
        - Category ID must be one of the defined values (1-10)
        - Some fields may be restricted based on product status
        
        ### Architecture
        This API is implemented through inbound adapters of hexagonal architecture.
        Domain services validate business rules and publish events.
      operationId: updateProduct
      parameters:
        - name: id
          in: path
          required: true
          description: Unique ID of the product to update
          schema:
            type: integer
            format: int64
            minimum: 1
          example: 1
      requestBody:
        description: Product information to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUpdateRequest'
            examples:
              electronics_update:
                summary: Electronics Update Example
                description: MacBook Pro product information update example
                value:
                  name: "MacBook Pro 16 (2024)"
                  description: "Apple MacBook Pro 16-inch M3 Max (2024 model)"
                  shortDescription: "Latest 16-inch MacBook Pro"
                  brand: "Apple"
                  model: "MacBook Pro M3 Max 2024"
                  price: 3290000
                  comparePrice: 3590000
                  categoryId: 1
                  visibility: "PUBLIC"
                  isFeatured: true
                  metaTitle: "MacBook Pro 16-inch M3 Max 2024"
                  metaDescription: "Apple latest MacBook Pro 16-inch 2024 model"
                  searchKeywords: "macbook,pro,apple,laptop,2024"
              price_update:
                summary: Price Update Example
                description: Product price only update example
                value:
                  price: 2990000
                  comparePrice: 3290000
              stock_update:
                summary: Stock Management Update Example
                description: Stock-related settings update example
                value:
                  minOrderQuantity: 1
                  maxOrderQuantity: 3
                  reorderPoint: 10
                  reorderQuantity: 30
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
              examples:
                success:
                  summary: Success response example
                  value:
                    id: 1
                    categoryId: 1
                    sku: "MACB-12AB34CD"
                    name: "MacBook Pro 16 (2024)"
                    description: "Apple MacBook Pro 16-inch M3 Max (2024 model)"
                    shortDescription: "Latest 16-inch MacBook Pro"
                    brand: "Apple"
                    model: "MacBook Pro M3 Max 2024"
                    price: 3290000
                    comparePrice: 3590000
                    status: "ACTIVE"
                    visibility: "PUBLIC"
                    isFeatured: true
                    availableQuantity: 45
                    reservedQuantity: 5
                    totalQuantity: 50
                    lowStockThreshold: 10
                    isTrackingEnabled: true
                    isBackorderAllowed: false
                    minOrderQuantity: 1
                    maxOrderQuantity: 3
                    reorderPoint: 10
                    reorderQuantity: 30
                    locationCode: "MAIN"
                    versionNumber: 1
                    metaTitle: "MacBook Pro 16-inch M3 Max 2024"
                    metaDescription: "Apple latest MacBook Pro 16-inch 2024 model"
                    searchKeywords: "macbook,pro,apple,laptop,2024"
                    createdAt: "2024-01-15T10:30:00"
                    updatedAt: "2024-01-15T14:25:00"
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                validation_error:
                  summary: Validation failed
                  value:
                    message: "Validation failed for 1 field(s)"
                    timestamp: "2024-01-15T14:25:00"
                    path: "/api/v1/products/1"
                    status: 400
                    validationErrors:
                      - field: "price"
                        rejectedValue: "-1000"
                        message: "Price must be greater than 0."
                invalid_category:
                  summary: Invalid category
                  value:
                    message: "Invalid category ID: 99"
                    code: "INVALID_CATEGORY"
                    timestamp: "2024-01-15T14:25:00"
                    path: "/api/v1/products/1"
                    status: 400
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                not_found:
                  summary: Product not found
                  value:
                    message: "Product not found with id: 999"
                    code: "PRODUCT_NOT_FOUND"
                    timestamp: "2024-01-15T14:25:00"
                    path: "/api/v1/products/999"
                    status: 404
        '409':
          description: Business rule violation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                status_conflict:
                  summary: Product status conflict
                  value:
                    message: "Cannot modify product in DELETED status"
                    code: "PRODUCT_STATUS_CONFLICT"
                    timestamp: "2024-01-15T14:25:00"
                    path: "/api/v1/products/1"
                    status: 409
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                server_error:
                  summary: Server error
                  value:
                    message: "Internal server error occurred"
                    timestamp: "2024-01-15T14:25:00"
                    path: "/api/v1/products/1"
                    status: 500

    delete:
      tags:
        - Products
      summary: Delete product
      description: |
        Delete a product using soft delete pattern.
        
        The product is not physically removed but marked as deleted with a timestamp.
        Validates that the product doesn't have active orders or items in shopping carts.
        
        Business Rules:
        - Product status changes to ARCHIVED
        - Related data handling (images, inventory)
        - Cache invalidation for deleted products
        - Domain event publishing for product deletion
      operationId: deleteProduct
      parameters:
        - name: id
          in: path
          required: true
          description: Product ID to delete
          schema:
            type: integer
            format: int64
            minimum: 1
          example: 1
      responses:
        '204':
          description: Product successfully deleted (soft delete)
        '400':
          description: Cannot delete product due to business constraints
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                product_in_use:
                  summary: Product has active orders
                  value:
                    message: "Product cannot be deleted due to active orders"
                    timestamp: "2024-01-15T14:25:00"
                    path: "/api/v1/products/1"
                    status: 400
                product_in_cart:
                  summary: Product exists in shopping carts
                  value:
                    message: "Product cannot be deleted as it exists in shopping carts"
                    timestamp: "2024-01-15T14:25:00"
                    path: "/api/v1/products/1"
                    status: 400
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                not_found:
                  summary: Product not found
                  value:
                    message: "Product not found with id: 1"
                    timestamp: "2024-01-15T14:25:00"
                    path: "/api/v1/products/1"
                    status: 404
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                server_error:
                  summary: Server error
                  value:
                    message: "Internal server error occurred"
                    timestamp: "2024-01-15T14:25:00"
                    path: "/api/v1/products/1"
                    status: 500


  /api/v1/products/verify:
    post:
      tags: [Product]
      summary: Verify Products
      description: |
        Validates product availability and provides detailed information for order processing.
        
        ### Business Rules
        - Validates product existence and active status
        - Checks inventory availability (placeholder implementation)
        - Returns order quantity constraints (min/max)
        - Provides pricing information (current vs original)
        - Supports batch verification for multiple products
        
        ### Implementation Notes
        - Currently returns "Insufficient stock" for all products (TODO: integrate with inventory_snapshots)
        - Order quantity limits are hardcoded (min: 1, max: 100) - TODO: make product-specific
        - Follows hexagonal architecture patterns with proper separation of concerns
        
        ### Use Cases
        - Order validation before checkout
        - Shopping cart verification
        - Inventory availability checks
        - Bulk product verification
      operationId: verifyProducts
      requestBody:
        description: List of products to verify with requested quantities
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductVerifyRequest'
            examples:
              single_product:
                summary: Single Product Verification
                description: Verify availability of one product
                value:
                  items:
                    - productId: 1
                      quantity: 5
              multiple_products:
                summary: Multiple Products Verification
                description: Batch verification of multiple products
                value:
                  items:
                    - productId: 1
                      quantity: 5
                    - productId: 2
                      quantity: 10
                    - productId: 3
                      quantity: 3
              large_quantities:
                summary: Large Quantity Verification
                description: Verify products with larger quantities
                value:
                  items:
                    - productId: 1
                      quantity: 50
                    - productId: 2
                      quantity: 100
      responses:
        '200':
          description: Product verification results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductVerifyResponse'
              examples:
                all_available:
                  summary: All products available
                  description: All requested products are available for purchase
                  value:
                    allAvailable: true
                    results:
                      - productId: 1
                        sku: "LAPTOP-001"
                        name: "Gaming Laptop"
                        available: true
                        status: "ACTIVE"
                        requestedQuantity: 5
                        availableStock: 50
                        currentPrice: 1500000.00
                        originalPrice: 1500000.00
                        minOrderQuantity: 1
                        maxOrderQuantity: 100
                      - productId: 2
                        sku: "MOUSE-001"
                        name: "Gaming Mouse"
                        available: true
                        status: "ACTIVE"
                        requestedQuantity: 10
                        availableStock: 100
                        currentPrice: 50000.00
                        originalPrice: 50000.00
                        minOrderQuantity: 1
                        maxOrderQuantity: 100
                some_unavailable:
                  summary: Some products unavailable
                  description: Mixed results with both available and unavailable products
                  value:
                    allAvailable: false
                    results:
                      - productId: 1
                        sku: "LAPTOP-001"
                        name: "Gaming Laptop"
                        available: true
                        status: "ACTIVE"
                        requestedQuantity: 5
                        availableStock: 50
                        currentPrice: 1500000.00
                        originalPrice: 1500000.00
                        minOrderQuantity: 1
                        maxOrderQuantity: 100
                      - productId: 2
                        sku: "MOUSE-002"
                        name: "Wireless Mouse"
                        available: false
                        status: "ACTIVE"
                        requestedQuantity: 200
                        availableStock: 50
                        currentPrice: 75000.00
                        originalPrice: 75000.00
                        unavailableReason: "Insufficient stock"
                        minOrderQuantity: 1
                        maxOrderQuantity: 100
                product_not_found:
                  summary: Product not found
                  description: Some products do not exist
                  value:
                    allAvailable: false
                    results:
                      - productId: 1
                        sku: "LAPTOP-001"
                        name: "Gaming Laptop"
                        available: true
                        status: "ACTIVE"
                        requestedQuantity: 5
                        availableStock: 50
                        currentPrice: 1500000.00
                        originalPrice: 1500000.00
                        minOrderQuantity: 1
                        maxOrderQuantity: 100
                      - productId: 999
                        available: false
                        requestedQuantity: 1
                        unavailableReason: "Product not found"
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                empty_items:
                  summary: Empty items list
                  description: Items list cannot be empty
                  value:
                    message: "Validation failed"
                    code: "VALIDATION_ERROR"
                    timestamp: "2024-01-15T16:45:00"
                    path: "/api/v1/products/verify"
                    status: 400
                    validationErrors:
                      - field: "items"
                        message: "Product verification items cannot be empty."
                invalid_product_id:
                  summary: Invalid product ID
                  description: Product ID must be positive
                  value:
                    message: "Validation failed"
                    code: "VALIDATION_ERROR"
                    timestamp: "2024-01-15T16:45:00"
                    path: "/api/v1/products/verify"
                    status: 400
                    validationErrors:
                      - field: "items[0].productId"
                        message: "Product ID must be positive."
                invalid_quantity:
                  summary: Invalid quantity
                  description: Quantity must be positive
                  value:
                    message: "Validation failed"
                    code: "VALIDATION_ERROR"
                    timestamp: "2024-01-15T16:45:00"
                    path: "/api/v1/products/verify"
                    status: 400
                    validationErrors:
                      - field: "items[0].quantity"
                        message: "Quantity must be positive."
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                server_error:
                  summary: Product verification failed
                  description: Unexpected server error during verification
                  value:
                    message: "Product verification failed"
                    code: "INTERNAL_SERVER_ERROR"
                    timestamp: "2024-01-15T16:45:00"
                    path: "/api/v1/products/verify"
                    status: 500

components:
  schemas:
    ProductCreateRequest:
      type: object
      required:
        - name
        - price
        - categoryId
        - sku
      properties:
        categoryId:
          type: integer
          format: int64
          minimum: 1
          maximum: 10
          description: Category ID (1-10)
          example: 1
        sku:
          type: string
          maxLength: 100
          description: Product SKU (Stock Keeping Unit)
          example: "MACB-12AB34CD"
        name:
          type: string
          maxLength: 255
          description: Product name
          example: "MacBook Pro 16"
        description:
          type: string
          maxLength: 5000
          description: Product description
          example: "Apple MacBook Pro 16-inch M3 Max"
        shortDescription:
          type: string
          maxLength: 500
          description: Short description
          example: "High-performance 16-inch MacBook Pro"
        brand:
          type: string
          maxLength: 100
          description: Brand name
          example: "Apple"
        model:
          type: string
          maxLength: 100
          description: Model name
          example: "MacBook Pro M3 Max"
        price:
          type: number
          format: decimal
          minimum: 0.01
          maximum: 99999999.99
          description: Price (KRW)
          example: 3490000
        comparePrice:
          type: number
          format: decimal
          minimum: 0.01
          description: Compare price (original price before discount)
          example: 3790000
        costPrice:
          type: number
          format: decimal
          minimum: 0.01
          description: Cost price
          example: 2500000
        weight:
          type: number
          format: decimal
          minimum: 0.01
          description: Weight (kg)
          example: 2.14
        productAttributes:
          type: string
          description: Product attributes (JSON format)
          example: '{"color": "Space Gray", "storage": "1TB"}'
        visibility:
          type: string
          maxLength: 20
          description: Visibility status
          enum: [PUBLIC, PRIVATE, HIDDEN]
          default: "PUBLIC"
          example: "PUBLIC"
        taxClass:
          type: string
          maxLength: 50
          description: Tax classification
          example: "STANDARD"
        metaTitle:
          type: string
          maxLength: 255
          description: SEO title
          example: "MacBook Pro 16-inch M3 Max"
        metaDescription:
          type: string
          maxLength: 500
          description: SEO description
          example: "Apple latest MacBook Pro 16-inch model"
        searchKeywords:
          type: string
          maxLength: 1000
          description: Search keywords
          example: "macbook,pro,apple,laptop"
        isFeatured:
          type: boolean
          description: Featured product flag
          default: false
          example: true
        initialStock:
          type: integer
          minimum: 0
          description: Initial stock quantity
          example: 50
        lowStockThreshold:
          type: integer
          minimum: 0
          description: Low stock threshold
          example: 5
        isTrackingEnabled:
          type: boolean
          description: Stock tracking enabled
          default: true
          example: true
        isBackorderAllowed:
          type: boolean
          description: Allow backorder when out of stock
          default: false
          example: false
        minOrderQuantity:
          type: integer
          minimum: 1
          description: Minimum order quantity
          default: 1
          example: 1
        maxOrderQuantity:
          type: integer
          minimum: 1
          description: Maximum order quantity (null means no limit)
          example: 100
        reorderPoint:
          type: integer
          minimum: 0
          description: Reorder threshold
          default: 0
          example: 20
        reorderQuantity:
          type: integer
          minimum: 0
          description: Reorder quantity
          default: 0
          example: 100
        locationCode:
          type: string
          maxLength: 50
          description: Warehouse/location code
          default: "MAIN"
          example: "MAIN"

    ProductUpdateRequest:
      type: object
      description: Product update request schema (all fields are optional)
      properties:
        categoryId:
          type: integer
          format: int64
          minimum: 1
          maximum: 10
          description: Category ID (1-10)
          example: 1
        name:
          type: string
          maxLength: 255
          description: Product name
          example: "MacBook Pro 16 (2024)"
        description:
          type: string
          maxLength: 5000
          description: Product description
          example: "Apple MacBook Pro 16-inch M3 Max (2024 model)"
        shortDescription:
          type: string
          maxLength: 500
          description: Short description
          example: "Latest 16-inch MacBook Pro"
        brand:
          type: string
          maxLength: 100
          description: Brand name
          example: "Apple"
        model:
          type: string
          maxLength: 100
          description: Model name
          example: "MacBook Pro M3 Max 2024"
        price:
          type: number
          format: decimal
          minimum: 0.01
          maximum: 99999999.99
          description: Price (KRW)
          example: 3290000
        comparePrice:
          type: number
          format: decimal
          minimum: 0.01
          maximum: 99999999.99
          description: Compare price (KRW)
          example: 3590000
        visibility:
          type: string
          enum: [PUBLIC, PRIVATE, HIDDEN]
          description: Product visibility status
          example: "PUBLIC"
        isFeatured:
          type: boolean
          description: Featured product flag
          example: true
        minOrderQuantity:
          type: integer
          minimum: 1
          maximum: 9999
          description: Minimum order quantity
          default: 1
          example: 1
        maxOrderQuantity:
          type: integer
          minimum: 1
          maximum: 9999
          description: Maximum order quantity
          default: 999
          example: 3
        reorderPoint:
          type: integer
          minimum: 0
          maximum: 99999
          description: Reorder threshold
          default: 0
          example: 10
        reorderQuantity:
          type: integer
          minimum: 0
          maximum: 99999
          description: Reorder quantity
          default: 0
          example: 30
        metaTitle:
          type: string
          maxLength: 255
          description: SEO meta title
          example: "MacBook Pro 16-inch M3 Max 2024"
        metaDescription:
          type: string
          maxLength: 500
          description: SEO meta description
          example: "Apple latest MacBook Pro 16-inch 2024 model"
        searchKeywords:
          type: string
          maxLength: 1000
          description: Search keywords (comma separated)
          example: "macbook,pro,apple,laptop,2024"

    ProductResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Product ID
          example: 1
        categoryId:
          type: integer
          format: int64
          description: Category ID
          example: 1
        sku:
          type: string
          description: Product SKU (auto-generated)
          example: "MACB-12AB34CD"
        name:
          type: string
          description: Product name
          example: "MacBook Pro 16"
        description:
          type: string
          description: Product description
          example: "Apple MacBook Pro 16-inch M3 Max"
        shortDescription:
          type: string
          description: Short description
          example: "High-performance 16-inch MacBook Pro"
        brand:
          type: string
          description: Brand name
          example: "Apple"
        model:
          type: string
          description: Model name
          example: "MacBook Pro M3 Max"
        price:
          type: number
          format: decimal
          description: Price (KRW)
          example: 3490000
        comparePrice:
          type: number
          format: decimal
          description: Compare price (original price before discount)
          example: 3790000
        costPrice:
          type: number
          format: decimal
          description: Cost price
          example: 2500000
        weight:
          type: number
          format: decimal
          description: Weight (kg)
          example: 2.14
        productAttributes:
          type: string
          description: Product attributes (JSON format)
          example: '{"color": "Space Gray", "storage": "1TB"}'
        status:
          $ref: '#/components/schemas/ProductStatus'
        visibility:
          type: string
          description: Visibility status
          example: "PUBLIC"
        isFeatured:
          type: boolean
          description: Featured product flag
          example: true
        availableQuantity:
          type: integer
          nullable: true
          description: Available quantity
          example: 50
        reservedQuantity:
          type: integer
          nullable: true
          description: Reserved quantity
          example: 0
        totalQuantity:
          type: integer
          nullable: true
          description: Total quantity
          example: 50
        lowStockThreshold:
          type: integer
          nullable: true
          description: Low stock threshold
          example: 5
        isTrackingEnabled:
          type: boolean
          description: Stock tracking enabled
          example: true
        isBackorderAllowed:
          type: boolean
          description: Allow backorder when out of stock
          example: false
        minOrderQuantity:
          type: integer
          description: Minimum order quantity
          example: 1
        maxOrderQuantity:
          type: integer
          description: Maximum order quantity
          example: 5
        reorderPoint:
          type: integer
          nullable: true
          description: Reorder threshold
          example: 5
        reorderQuantity:
          type: integer
          nullable: true
          description: Reorder quantity
          example: 20
        locationCode:
          type: string
          description: Warehouse/location code
          example: "MAIN"
        versionNumber:
          type: integer
          format: int64
          description: Version number
          example: 0
        metaTitle:
          type: string
          description: SEO meta title
          example: "MacBook Pro 16-inch M3 Max"
        metaDescription:
          type: string
          description: SEO meta description
          example: "Apple latest MacBook Pro 16-inch model"
        searchKeywords:
          type: string
          description: Search keywords
          example: "macbook,pro,apple,laptop"
        createdAt:
          type: string
          format: date-time
          description: Created timestamp
          example: "2024-01-15T10:30:00"
        updatedAt:
          type: string
          format: date-time
          description: Updated timestamp
          example: "2024-01-15T10:30:00"

    ProductStatus:
      type: string
      enum: [DRAFT, ACTIVE, INACTIVE, ARCHIVED]
      description: |
        Product status:
        - DRAFT: Product is being created/edited
        - ACTIVE: Product is live and available for purchase
        - INACTIVE: Product is temporarily disabled
        - ARCHIVED: Product is soft-deleted (filtered from GET responses)
      example: "ACTIVE"

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Error message
          example: "Validation failed"
        code:
          type: string
          description: Error code
          example: "VALIDATION_ERROR"
        timestamp:
          type: string
          format: date-time
          description: Error timestamp
          example: "2024-01-15T10:30:00"
        path:
          type: string
          description: Request path
          example: "/api/v1/products"
        status:
          type: integer
          description: HTTP status code
          example: 400
        validationErrors:
          type: array
          description: Validation error details
          items:
            $ref: '#/components/schemas/ValidationError'

    ValidationError:
      type: object
      properties:
        field:
          type: string
          description: Field name with error
          example: "name"
        rejectedValue:
          type: string
          description: Rejected field value
          example: ""
        message:
          type: string
          description: Field-specific error message
          example: "Product name is required."
      required:
        - field
        - message

    ProductVerifyRequest:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          minItems: 1
          description: List of products to verify
          items:
            $ref: '#/components/schemas/ProductVerifyItem'
      example:
        items:
          - productId: 1
            quantity: 5
          - productId: 2
            quantity: 10

    ProductVerifyItem:
      type: object
      required:
        - productId
        - quantity
      properties:
        productId:
          type: integer
          format: int64
          minimum: 1
          description: Product ID to verify
          example: 1
        quantity:
          type: integer
          minimum: 1
          description: Requested quantity
          example: 5

    ProductVerifyResponse:
      type: object
      required:
        - allAvailable
        - results
      properties:
        allAvailable:
          type: boolean
          description: True if all requested products are available
          example: true
        results:
          type: array
          description: Verification results for each requested product
          items:
            $ref: '#/components/schemas/ProductVerifyResult'
      example:
        allAvailable: true
        results:
          - productId: 1
            sku: "LAPTOP-001"
            name: "Gaming Laptop"
            available: true
            status: "ACTIVE"
            requestedQuantity: 5
            availableStock: 50
            currentPrice: 1500000.00
            originalPrice: 1500000.00
            minOrderQuantity: 1
            maxOrderQuantity: 100

    ProductVerifyResult:
      type: object
      required:
        - productId
        - available
        - requestedQuantity
      properties:
        productId:
          type: integer
          format: int64
          description: Product ID from request
          example: 1
        sku:
          type: string
          description: Product SKU (only if product exists)
          example: "LAPTOP-001"
        name:
          type: string
          description: Product name (only if product exists)
          example: "Gaming Laptop"
        available:
          type: boolean
          description: Whether the product is available for purchase
          example: true
        status:
          $ref: '#/components/schemas/ProductStatus'
        requestedQuantity:
          type: integer
          description: Requested quantity from request
          example: 5
        availableStock:
          type: integer
          description: Available stock quantity (only if product exists)
          example: 50
        currentPrice:
          type: number
          format: decimal
          description: Current selling price (only if product exists)
          example: 1500000.00
        originalPrice:
          type: number
          format: decimal
          description: Original/base price (only if product exists)
          example: 1500000.00
        unavailableReason:
          type: string
          description: Reason why product is unavailable (only if not available)
          example: "Insufficient stock"
        minOrderQuantity:
          type: integer
          description: Minimum order quantity allowed (only if product exists)
          example: 1
        maxOrderQuantity:
          type: integer
          description: Maximum order quantity allowed (only if product exists)
          example: 100
      example:
        productId: 1
        sku: "LAPTOP-001"
        name: "Gaming Laptop"
        available: true
        status: "ACTIVE"
        requestedQuantity: 5
        availableStock: 50
        currentPrice: 1500000.00
        originalPrice: 1500000.00
        minOrderQuantity: 1
        maxOrderQuantity: 100

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
